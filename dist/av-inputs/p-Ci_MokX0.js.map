{"version":3,"file":"p-Ci_MokX0.js","sources":["src/utils/text.handler.ts"],"sourcesContent":["import { InputScanData } from 'src/components';\nimport { InputScanDataPersona, InputScanType } from 'src/components/input-scan-reader/input-scan-reader.types';\n\n\nfunction getDataFromDNIv1(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanDataPersona {\n  return {\n    type: type,\n    text: scannedText,\n    data: {\n      apellido: regRun[4],\n      nombre: regRun[5],\n      dni: regRun[1],\n      fecha_nacimiento: regRun[6],\n      sexo: regRun[7],\n    },\n  };\n}\n\nfunction runRegex(text: string): InputScanData {\n  text = text.trim();\n\n  const regexToData = [\n    // DNI v1 de copilot\n    {\n      regex: /^\\\"?(\\w{8}) +\\\"?([a-z])\\\"?(\\w)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.DNIv1,\n      cbk: getDataFromDNIv1,\n    },\n\n    // DNI V1 que tenia alevilar antes\n    {\n      regex: /^\\\"?(\\w{8}) +\\\"?([a-z])\\\"?(\\w)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\"/gi,\n      type: InputScanType.DNIv1,\n      cbk: getDataFromDNIv1,\n    },\n\n    // DNI v2\n    {\n      regex: /^\\\"?(\\d+)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z])\\\"?(\\w{8})\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.DNIv2,\n      cbk: getDataFromDNIv2,\n    },\n\n    // licencia conducir\n    {\n      regex: /^\\\"?(\\w{8})\\\"?([a-z])\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.LICENCIA_CONDUCIR,\n      cbk: getDataFromLicenciaDeCOnducir,\n    },\n    {\n      regex: /^([0-9]+)$/gi,\n      type: InputScanType.NUMBER,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^(?!^\\d+$)([a-z0-9]+)$/gi,\n      type: InputScanType.ALFANUMERICO,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/gi,\n      type: InputScanType.URL,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/gi,\n      type: InputScanType.EMAIL,\n      cbk: getDataFromRegex,\n    },\n  ];\n\n  for (let i = 0; i < regexToData.length; i++) {\n    const regexToDataItem = regexToData[i];\n    const regrun = regexToDataItem.regex.exec(text);\n    console.info('analizando regex', text.trim(), i, regrun);\n    if (regrun) {\n      return regexToDataItem.cbk(regexToDataItem.type, text, regrun);\n    }\n  }\n\n  return null;\n}\n\nfunction getDataFromRegex(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanData {\n  return {\n    type: type,\n    text: scannedText,\n    data: regRun,\n  };\n}\n\nfunction getDataFromLicenciaDeCOnducir(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanData {\n  return getDataFromRegex(type, scannedText, regRun);\n}\n\nfunction getDataFromDNIv2(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanDataPersona {\n  return {\n    type: type,\n    text: scannedText,\n    data: {\n      apellido: regRun[2],\n      nombre: regRun[3],\n      dni: regRun[5],\n      fecha_nacimiento: regRun[7],\n      sexo: regRun[4],\n    },\n  };\n}\n\nexport function processText(text: string): InputScanData {\n  const scannedData = runRegex(text);\n\n  let data;\n  if (scannedData !== null) {\n    data = scannedData;\n  } else {\n    console.info('es desconocidoooo', text);\n    data = {\n      type: InputScanType.DESCONOCIDO,\n      text: text,\n      data: {\n        text: text,\n      },\n    };\n  }\n\n  return data;\n}\n"],"names":[],"mappings":"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"}