{"version":3,"file":"camera.service.js","sourceRoot":"","sources":["../../src/utils/camera.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { BoundingBox } from \"@mediapipe/tasks-vision\";\n\nexport enum CameraDirection {\n    Rear = \"REAR\",\n    Front = \"FRONT\"\n}\n\n/**\n * Crea un HTMLVideoElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement\n */\nexport  function createVideo(): HTMLVideoElement {\n\n    // no existe, lo creo\n    const video = document.createElement(\"video\")\n    video.autoplay = true;\n    video.style.display = \"none\"\n\n    return video\n}\n\n\n/**\n * Crea un HTMLCanvasElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement\n */\nexport  function createCanvas( parentElement: HTMLElement ): HTMLCanvasElement {\n\n    // no existe, lo creo\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = parseInt( parentElement.getAttribute(\"width\") );\n    canvas.height = parseInt( parentElement.getAttribute(\"height\") );\n    return canvas\n}\n\nexport function videoToCanvas(video: HTMLVideoElement,box: BoundingBox): Promise<HTMLCanvasElement> {\n    return new Promise((resolve, reject) => {\n        try {\n            const canvas = document.createElement(\"canvas\")\n            const { originX, originY, width, height } = box\n\n            const upscaledW = width * 1.3\n            const upscaledH = height * 2\n\n\n            const finalW = upscaledW > upscaledH ? upscaledW : upscaledH\n            const finalH = upscaledW > upscaledH ? upscaledW : upscaledH\n\n            canvas.width = finalW;\n            canvas.height = finalH;\n\n            const ctx = canvas.getContext('2d');\n\n            const xMove = ((finalW - width)/2)\n            const yMove = ((finalH - height)/2)\n            ctx.drawImage(video, originX - xMove, originY - yMove, finalW, finalH, 0, 0, canvas.width, canvas.height);\n\n            resolve(canvas);\n        } catch (error) {\n            reject(error);\n        }\n      });\n}\n\n\nexport function videoToBlob(video: HTMLVideoElement, box?: BoundingBox, compression: number = 0.85): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        try {\n\n            videoToCanvas(video, box).then( canvas => {\n                canvas.toBlob( (blob) => {\n                    resolve(blob);\n                }, \"image/jpeg\", compression)\n            })\n        } catch (error) {\n            reject(error);\n        }\n      });\n\n\n}\n\nexport function renderToCanvas( canvas, video, drawImageCb?: Function|null ): number {\n\n    let ctx = canvas.getContext('2d');\n\n    let imgWidth = video.videoWidth;\n    let imgHeight = video.videoHeight;\n\n    var imgSize = Math.min(imgWidth, imgHeight);\n    // The following two lines yield a central based cropping.\n    // They can both be amended to be 0, if you wish it to be\n    // a left based cropped image.\n    var left = (imgWidth - imgSize) / 2;\n    var top = (imgHeight - imgSize) / 2;\n\n\n    if ( drawImageCb ) {\n        drawImageCb.call(this, ctx, video, left, top, imgSize, imgSize, 0,0, canvas.width, canvas.height)\n    } else {\n        ctx.drawImage(video, left, top, imgSize, imgSize, 0,0, canvas.width, canvas.height);\n    }\n\n\n    return requestAnimationFrame(() => renderToCanvas( canvas, video, drawImageCb) );\n\n}\n\n\nexport async function takePicture( canvas, compression = 0.85 ): Promise<File> {\n    return new Promise((resolve, reject) => {\n        try {\n            canvas.toBlob( (blob) => {\n                const filename = \"pic_\" + Math.abs( Math.round( Math.random() * 1000))\n                var file = new File([blob], filename, {type: \"image/jpeg\"});\n                resolve(file);\n            }, \"image/jpeg\", compression)\n        } catch (error) {\n            reject(error);\n        }\n      });\n}\n\n\nexport function initWebcamToVideo(video: HTMLVideoElement, direction: CameraDirection = CameraDirection.Front): Promise<MediaStream> {\n    return new Promise((resolve, reject) => {\n\n        if (navigator.mediaDevices.getUserMedia) {\n            const facingMode = (direction == CameraDirection.Front) ? \"user\": \"environment\"\n\n            navigator.mediaDevices.getUserMedia({\n                audio: false,\n                video: {\n                    width: { min: 200 },\n                    height: { min: 200 },\n                    facingMode: facingMode\n                }\n            })\n            .then((stream) => {\n                video.srcObject = stream;\n                resolve(stream);\n            })\n            .catch(function (err0r) {\n                reject(err0r);\n            });\n        }\n    });\n}\n"]}