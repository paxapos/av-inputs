{"version":3,"file":"text.handler.js","sourceRoot":"","sources":["../../src/utils/text.handler.ts"],"names":[],"mappings":"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","sourcesContent":["import { InputScanData } from 'src/components';\nimport { InputScanDataPersona, InputScanType } from 'src/components/input-scan-reader/input-scan-reader.types';\n\n\nfunction getDataFromDNIv1(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanDataPersona {\n  return {\n    type: type,\n    text: scannedText,\n    data: {\n      apellido: regRun[4],\n      nombre: regRun[5],\n      dni: regRun[1],\n      fecha_nacimiento: regRun[6],\n      sexo: regRun[7],\n    },\n  };\n}\n\nfunction runRegex(text: string): InputScanData {\n  text = text.trim();\n\n  const regexToData = [\n    // DNI v1 de copilot\n    {\n      regex: /^\\\"?(\\w{8}) +\\\"?([a-z])\\\"?(\\w)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.DNIv1,\n      cbk: getDataFromDNIv1,\n    },\n\n    // DNI V1 que tenia alevilar antes\n    {\n      regex: /^\\\"?(\\w{8}) +\\\"?([a-z])\\\"?(\\w)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\"/gi,\n      type: InputScanType.DNIv1,\n      cbk: getDataFromDNIv1,\n    },\n\n    // DNI v2\n    {\n      regex: /^\\\"?(\\d+)\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z])\\\"?(\\w{8})\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.DNIv2,\n      cbk: getDataFromDNIv2,\n    },\n\n    // licencia conducir\n    {\n      regex: /^\\\"?(\\w{8})\\\"?([a-z])\\\"?([a-z ]+)\\\"?([a-z ]+)\\\"?([a-z]+)\\\"?([0-9-]+)\\\"?([a-z])\\\"?([0-9-]+)/gi,\n      type: InputScanType.LICENCIA_CONDUCIR,\n      cbk: getDataFromLicenciaDeCOnducir,\n    },\n    {\n      regex: /^([0-9]+)$/gi,\n      type: InputScanType.NUMBER,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^(?!^\\d+$)([a-z0-9]+)$/gi,\n      type: InputScanType.ALFANUMERICO,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/gi,\n      type: InputScanType.URL,\n      cbk: getDataFromRegex,\n    },\n    {\n      regex: /^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/gi,\n      type: InputScanType.EMAIL,\n      cbk: getDataFromRegex,\n    },\n  ];\n\n  for (let i = 0; i < regexToData.length; i++) {\n    const regexToDataItem = regexToData[i];\n    const regrun = regexToDataItem.regex.exec(text);\n    console.info('analizando regex', text.trim(), i, regrun);\n    if (regrun) {\n      return regexToDataItem.cbk(regexToDataItem.type, text, regrun);\n    }\n  }\n\n  return null;\n}\n\nfunction getDataFromRegex(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanData {\n  return {\n    type: type,\n    text: scannedText,\n    data: regRun,\n  };\n}\n\nfunction getDataFromLicenciaDeCOnducir(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanData {\n  return getDataFromRegex(type, scannedText, regRun);\n}\n\nfunction getDataFromDNIv2(type: InputScanType, scannedText: string, regRun: RegExpExecArray): InputScanDataPersona {\n  return {\n    type: type,\n    text: scannedText,\n    data: {\n      apellido: regRun[2],\n      nombre: regRun[3],\n      dni: regRun[5],\n      fecha_nacimiento: regRun[7],\n      sexo: regRun[4],\n    },\n  };\n}\n\nexport function processText(text: string): InputScanData {\n  const scannedData = runRegex(text);\n\n  let data;\n  if (scannedData !== null) {\n    data = scannedData;\n  } else {\n    console.info('es desconocidoooo', text);\n    data = {\n      type: InputScanType.DESCONOCIDO,\n      text: text,\n      data: {\n        text: text,\n      },\n    };\n  }\n\n  return data;\n}\n"]}