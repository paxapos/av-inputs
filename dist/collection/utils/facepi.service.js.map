{"version":3,"file":"facepi.service.js","sourceRoot":"","sources":["../../src/utils/facepi.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    FaceDetector,\n    FilesetResolver,\n    Detection,\n    FaceLandmarker,\n    FaceLandmarkerResult,\n    ImageSource\n} from \"@mediapipe/tasks-vision\";\nimport { videoToBlob } from \"./camera.service\";\n\nexport interface DetectionImg {\n    detection: Detection,\n    currentTarget: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement,\n    blobImg: Blob,\n    confidence: number,\n    timestamp: number,\n}\n\nexport interface FaceDetectionConfig {\n    minDetectionConfidence?: number;\n    maxNumFaces?: number;\n    modelComplexity?: number;\n    throttleMs?: number;\n    enableLandmarks?: boolean;\n    useGPU?: boolean;\n}\n\nexport class FaceapiService {\n    private faceDetector: FaceDetector;\n    private landmarksDetector: FaceLandmarker;\n    private isInitialized = false;\n    private isInitializing = false;\n    private lastDetectionTime: number = 0;\n    private lastDetectionResult: DetectionImg | null = null;\n    private detectionQueue: Promise<DetectionImg | null> | null = null;\n\n    // Performance monitoring\n    private performanceStats = {\n        detections: 0,\n        avgDetectionTime: 0,\n        lastFrameTime: 0,\n        fps: 0\n    };\n\n    // Configuration with defaults\n    private config: Required<FaceDetectionConfig> = {\n        minDetectionConfidence: 0.3, // Reduced from 0.6 for better detection\n        maxNumFaces: 1,\n        modelComplexity: 1,\n        throttleMs: 100, // Increased from 50 for stability\n        enableLandmarks: true,\n        useGPU: true\n    };\n\n    constructor(config?: FaceDetectionConfig) {\n        if (config) {\n            this.config = { ...this.config, ...config };\n        }\n    }\n\n    async initialize() {\n        if (this.isInitialized) return this;\n        if (this.isInitializing) {\n            // Wait for ongoing initialization\n            while (this.isInitializing) {\n                await new Promise(resolve => setTimeout(resolve, 50));\n            }\n            return this;\n        }\n\n        this.isInitializing = true;\n\n        try {\n            console.log('🚀 Initializing FaceAPI Service...');\n            const startTime = performance.now();\n\n            // Initialize both detectors in parallel for better performance\n            await Promise.all([\n                this.initializefaceDetector(this.config.minDetectionConfidence),\n                this.config.enableLandmarks ? this.initFaceLandmarkerDetector() : Promise.resolve()\n            ]);\n\n            this.isInitialized = true;\n            this.isInitializing = false;\n\n            const initTime = performance.now() - startTime;\n            console.log(`✅ FaceAPI Service initialized in ${initTime.toFixed(2)}ms`);\n        } catch (error) {\n            this.isInitializing = false;\n            console.error('❌ Failed to initialize face detection:', error);\n            throw new Error(`Face detection initialization failed: ${error.message}`);\n        }\n\n        return this;\n    }\n\n    // Getter methods for accessing configuration\n    get minDetectionConfidence() { return this.config.minDetectionConfidence; }\n    get maxNumFaces() { return this.config.maxNumFaces; }\n    get throttleMs() { return this.config.throttleMs; }\n\n    // Update configuration dynamically\n    updateConfig(newConfig: Partial<FaceDetectionConfig>) {\n        const oldConfig = { ...this.config };\n        this.config = { ...this.config, ...newConfig };\n\n        // Reinitialize if critical settings changed\n        if (oldConfig.minDetectionConfidence !== this.config.minDetectionConfidence ||\n            oldConfig.maxNumFaces !== this.config.maxNumFaces ||\n            oldConfig.useGPU !== this.config.useGPU) {\n            console.log('🔄 Configuration changed, reinitializing...');\n            this.dispose();\n            this.initialize();\n        }\n    }\n\n    async initFaceLandmarkerDetector() {\n        try {\n            const filesetResolver = await FilesetResolver.forVisionTasks(\n                \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n            );\n            let runningMode: \"IMAGE\" | \"VIDEO\" = \"IMAGE\";\n            this.landmarksDetector = await FaceLandmarker.createFromOptions(filesetResolver, {\n                baseOptions: {\n                    modelAssetPath: `https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task`,\n                    delegate: this.config.useGPU ? \"GPU\" : \"CPU\"\n                },\n                outputFaceBlendshapes: true,\n                runningMode,\n                numFaces: this.config.maxNumFaces\n            });\n        } catch (error) {\n            console.error('Error initializing face landmarker:', error);\n            throw new Error(`Face landmarker initialization failed: ${error.message}`);\n        }\n    }\n\n    async initializefaceDetector(minDetectionConfidence: number) {\n        try {\n            const vision = await FilesetResolver.forVisionTasks(\n                \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n            );\n\n            this.faceDetector = await FaceDetector.createFromOptions(vision, {\n                minSuppressionThreshold: 0.3,\n                minDetectionConfidence,\n                baseOptions: {\n                    modelAssetPath: `https://storage.googleapis.com/mediapipe-models/face_detector/blaze_face_short_range/float16/1/blaze_face_short_range.tflite`,\n                    delegate: this.config.useGPU ? \"GPU\" : \"CPU\"\n                },\n                runningMode: \"VIDEO\",\n            });\n        } catch (error) {\n            console.error('Error initializing face detector:', error);\n            throw new Error(`Face detector initialization failed: ${error.message}`);\n        }\n    }\n\n    updateDetectionConfidence(newConfidence: number) {\n        this.config.minDetectionConfidence = newConfidence;\n        // Reinitialize detector with new confidence\n        if (this.isInitialized) {\n            this.initializefaceDetector(newConfidence);\n        }\n    }\n\n    async detectFace(el: HTMLVideoElement, timeStamp: DOMHighResTimeStamp): Promise<DetectionImg | null> {\n        if (!el || !this.faceDetector) {\n            console.warn('⚠️ Detection skipped:', {\n                hasElement: !!el,\n                hasDetector: !!this.faceDetector,\n                isInitialized: this.isInitialized\n            });\n            return null;\n        }\n\n        // Validate video element is ready for processing\n        if (!this.isVideoReady(el)) {\n            console.warn('⚠️ Video not ready for detection:', {\n                readyState: el.readyState,\n                videoWidth: el.videoWidth,\n                videoHeight: el.videoHeight,\n                currentTime: el.currentTime\n            });\n            return null;\n        }\n\n        // Use detection queue to prevent overlapping detection calls\n        if (this.detectionQueue) {\n            return this.detectionQueue;\n        }\n\n        this.detectionQueue = this.performDetection(el, timeStamp);\n        const result = await this.detectionQueue;\n        this.detectionQueue = null;\n\n        return result;\n    }\n\n    private isVideoReady(video: HTMLVideoElement): boolean {\n        return (\n            video.readyState >= 2 && // HAVE_CURRENT_DATA or higher\n            video.videoWidth > 0 &&\n            video.videoHeight > 0 &&\n            !video.paused &&\n            !video.ended &&\n            video.currentTime > 0\n        );\n    }\n\n    private async performDetection(el: HTMLVideoElement, timeStamp: DOMHighResTimeStamp): Promise<DetectionImg | null> {\n        const startTime = performance.now();\n\n        try {\n            console.log('🔍 Performing face detection...', {\n                videoReady: el.readyState,\n                videoWidth: el.videoWidth,\n                videoHeight: el.videoHeight,\n                currentTime: el.currentTime,\n                timestamp: timeStamp\n            });\n\n            // Double-check video is still ready (defensive programming)\n            if (!this.isVideoReady(el)) {\n                console.warn('⚠️ Video became invalid during detection');\n                return null;\n            }\n\n            const detectionResult = this.faceDetector.detectForVideo(el, timeStamp);\n            const detections = detectionResult.detections;\n\n            console.log('📊 Detection results:', {\n                detectionCount: detections?.length || 0,\n                detections: detections?.map(d => ({\n                    confidence: d.categories?.[0]?.score,\n                    boundingBox: d.boundingBox\n                }))\n            });\n\n            if (!detections || detections.length === 0) {\n                console.log('❌ No faces detected');\n                return null;\n            }\n\n            let detectionObj: Detection;\n\n            if (detections.length === 1) {\n                detectionObj = detections[0];\n            } else {\n                // Sort by confidence and take the best\n                const sorted = detections.sort((a, b) => {\n                    return (b.categories?.[0]?.score || 0) - (a.categories?.[0]?.score || 0);\n                });\n                detectionObj = sorted[0];\n            }\n\n            console.log('✅ Best detection:', {\n                confidence: detectionObj.categories?.[0]?.score,\n                threshold: this.config.minDetectionConfidence\n            });\n\n            const result = await this.getDetectorImgFromDetection(el, detectionObj, timeStamp);\n\n            // Update performance stats\n            this.updatePerformanceStats(performance.now() - startTime);\n\n            return result;\n        } catch (error) {\n            console.error('❌ Error during face detection:', error);\n            return null;\n        }\n    }\n\n    async detectFaceThrottled(\n        el: HTMLVideoElement,\n        timeStamp: DOMHighResTimeStamp,\n        throttleMs: number = 100\n    ): Promise<DetectionImg | null> {\n        const now = Date.now();\n        if (this.lastDetectionTime && (now - this.lastDetectionTime) < throttleMs) {\n            return this.lastDetectionResult;\n        }\n\n        this.lastDetectionTime = now;\n        this.lastDetectionResult = await this.detectFace(el, timeStamp);\n        return this.lastDetectionResult;\n    }\n\n    async detectFaceOptimized(\n        el: HTMLVideoElement,\n        timeStamp: DOMHighResTimeStamp\n    ): Promise<DetectionImg | null> {\n        return this.detectFaceThrottled(el, timeStamp, this.config.throttleMs);\n    }\n\n    async getDetectorImgFromDetection(el, detection: Detection, timeStamp: DOMHighResTimeStamp): Promise<DetectionImg> {\n        if (!detection || !detection.boundingBox) {\n            return null;\n        }\n\n        const blob = await videoToBlob(el, detection.boundingBox);\n        const confidence = detection.categories?.[0]?.score || 0;\n\n        return {\n            detection: detection,\n            currentTarget: el,\n            blobImg: blob,\n            confidence: confidence,\n            timestamp: timeStamp\n        };\n    }\n\n    async getFaceLandmarksFromBlob(blob: Blob): Promise<FaceLandmarkerResult> {\n        this.checkInitialized();\n\n        let imag: ImageSource = await createImageBitmap(blob);\n\n        return this.landmarksDetector.detect(imag);\n    }\n\n    checkInitialized() {\n        if (!this.landmarksDetector) throw new Error(\"Aun no se cargo el model de face detection\");\n    }\n\n    dispose() {\n        if (this.faceDetector) {\n            this.faceDetector.close();\n        }\n        if (this.landmarksDetector) {\n            this.landmarksDetector.close();\n        }\n        this.isInitialized = false;\n    }\n\n    // Performance monitoring methods\n    private updatePerformanceStats(detectionTime: number) {\n        this.performanceStats.detections++;\n        this.performanceStats.avgDetectionTime =\n            (this.performanceStats.avgDetectionTime * (this.performanceStats.detections - 1) + detectionTime) /\n            this.performanceStats.detections;\n\n        const now = performance.now();\n        if (this.performanceStats.lastFrameTime > 0) {\n            const frameTime = now - this.performanceStats.lastFrameTime;\n            this.performanceStats.fps = Math.round(1000 / frameTime);\n        }\n        this.performanceStats.lastFrameTime = now;\n    }\n\n    // Get performance statistics\n    getPerformanceStats() {\n        return { ...this.performanceStats };\n    }\n\n    // Reset performance statistics\n    resetPerformanceStats() {\n        this.performanceStats = {\n            detections: 0,\n            avgDetectionTime: 0,\n            lastFrameTime: 0,\n            fps: 0\n        };\n    }\n\n    // Check if service is ready\n    isReady(): boolean {\n        return this.isInitialized && !!this.faceDetector;\n    }\n\n    // Get current configuration\n    getConfig(): FaceDetectionConfig {\n        return { ...this.config };\n    }\n}\n\nexport const faceapiService = new FaceapiService();\n"]}