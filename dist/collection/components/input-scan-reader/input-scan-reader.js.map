{"version":3,"file":"input-scan-reader.js","sourceRoot":"","sources":["../../../src/components/input-scan-reader/input-scan-reader.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Event, Method, Element, EventEmitter, State, Listen, Prop, Watch } from '@stencil/core';\nimport { InputScanData } from './input-scan-reader.types';\nimport { processText } from 'src/utils/text.handler';\n\n// DNI EXAMPLES\n// \"17572896    \"A\"1\"CABRA\"LEONARDO ANTONIO FABIO\"ARGENTINA\"26-08-1965\"M\"08-08-2011\"00057696015\"5    \"08-08-2026\"31\"0\"ILRÑ2.01 CÑ110613.02 )No Cap.=\"UNIDAD ·05 ÇÇ S-NÑ 0040:2008::0005\n// 00691556286\"CANO\"JONATHAN LEONARDO\"M\"33951134\"C\"08-08-1988\"17-07-2022\"239\n// 00395738312\"TASSISTRO\"FLORENCIA ANTONELLA\"F\"41195367\"A\"20-06-1998\"30-08-2015\"275\n// 00115714043\"PIUMATO\"ANDRES JUAN\"M\"38305357\"B\"04-05-1994\"05-06-2012\n\n@Component({\n  tag: 'input-scan-reader',\n  styleUrl: 'input-scan-reader.css',\n  shadow: true,\n})\nexport class InputScanReader {\n  @Element() el: HTMLElement;\n\n  @State() reading = false;\n\n  @State() readingEnabled = false;\n\n  /**\n   * Show a modal with the scanned text. like a white blink on the screen\n   */\n  @Prop() modalTimer?: number = 0;\n\n  @Prop() scanTitle?: string = 'Scanning Text';\n\n  displayModal(data: InputScanData) {\n    // crear un elemento tipo DIV del tamaño del parentNode de this.el\n\n    const parent = this.el.parentNode;\n\n    const div = document.createElement('div');\n    div.style.position = 'fixed';\n    div.style.top = '0';\n    div.style.left = '0';\n    div.style.width = '100vw';\n    div.style.height = '100vh';\n    div.style.backgroundColor = 'rgba(254,254,254,0.65)';\n    div.style.zIndex = '1000';\n    div.style.display = 'flex';\n    div.style.alignItems = 'center';\n    div.style.justifyContent = 'center';\n    div.style.color = 'black';\n    div.style.fontSize = '3rem';\n    div.style.fontWeight = 'bold';\n    div.style.textAlign = 'center';\n    div.style.padding = '1rem';\n    div.style.boxSizing = 'border-box';\n    div.style.borderRadius = '1rem';\n    div.style.overflow = 'hidden';\n    div.style.textOverflow = 'ellipsis';\n    div.style.whiteSpace = 'nowrap';\n    div.style.cursor = 'pointer';\n    div.textContent = data.text;\n    div.addEventListener('click', () => {\n      div.remove();\n    });\n    parent.appendChild(div);\n    setTimeout(() => {\n      div.remove();\n    }, this.modalTimer);\n  }\n\n  @Listen('scan')\n  handleScan(event: CustomEvent<InputScanData>) {\n    if (this.modalTimer > 0) {\n      this.displayModal(event.detail);\n    }\n\n    // reinicializo texto\n    this.scannedText = '';\n  }\n\n  componentDidLoad() {\n    if (!this.readingEnabled) {\n      this.start();\n    }\n  }\n\n  onEnterHandler() {\n    if (this.scannedText == '') {\n      return false;\n    }\n\n    // convierto el texto a InputScanData\n    const scannedData = processText(this.scannedText);\n\n    // emit the scanned data and reset the scannedText\n    this.scan.emit(scannedData);\n  }\n\n  @State() scannedText = '';\n\n  @Watch('scannedText')\n  watchScannedTextHandler(newValue: string) {\n    if (newValue.length > 0) {\n      this.restartOnTimeout();\n    } else {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /**\n   * Fired when the user press enter or tab\n   * used with scanners like BARCODES or QR\n   */\n  @Event() scan: EventEmitter<InputScanData>;\n\n  /**\n   * get raw scanned text\n   * @returns the text scanned\n   */\n  @Method()\n  async getText(): Promise<string> {\n    return this.scannedText;\n  }\n\n  /**\n   * Structured scanned text\n   * @returns the text scanned\n   */\n  @Method()\n  async getData(): Promise<InputScanData> {\n    if (this.scannedText == '') {\n      return null;\n    }\n\n    return processText(this.scannedText);\n  }\n\n  reset() {\n    this.scannedText = '';\n    this.readingEnabled = false;\n  }\n\n  @State() timeout: NodeJS.Timeout;\n\n  restartOnTimeout(ms = 5000) {\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.reset();\n    }, ms);\n  }\n\n  onKeydownHandler(event: KeyboardEvent) {\n    if ( this.readingEnabled === false ) {\n      return;\n    }\n\n    if (event.isComposing) {\n      return;\n    }\n    if (event.code == 'Enter' || event.code == 'NumpadEnter' || event.code == 'Tab') {\n      return this.onEnterHandler();\n    }\n\n    if (event.key == 'Shift' || event.key == 'Control' || event.key == 'Alt' || event.key == 'AltGraph' || event.key == 'Meta') {\n      return;\n    }\n\n    if (event.key == 'Backspace') {\n      this.scannedText = this.scannedText.slice(0, -1);\n      return;\n    }\n\n    if (event.key == 'Escape') {\n      this.scannedText = '';\n      return;\n    }\n\n    if (event.key == ' ') {\n      this.scannedText += ' ';\n      return;\n    }\n\n    if (event.key == 'CapsLock') {\n      return;\n    }\n\n    // Ignore control characters\n    if (event.key.length === 1 && !event.ctrlKey && !event.metaKey && !event.altKey) {\n      this.scannedText += event.key;\n    }\n  }\n\n   @Listen('keydown', { target: 'document' })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (this.readingEnabled) {\n      this.onKeydownHandler(ev);\n    }\n  }\n\n\n  @Method()\n  async start() {\n    // listen on document for keydown and write text in scannedText\n    this.readingEnabled = true;\n  }\n\n  @Method()\n  async stop() {\n    this.readingEnabled = false;\n  }\n\n  handleOnInpujtChangeEvent(ev: Event) {\n    this.scannedText = (ev.target as HTMLInputElement).value;\n  }\n\n  spanLoader() {\n    return <span class=\"loader\"></span>;\n  }\n\n  render() {\n    let mainClass = this.readingEnabled ? '' : 'stopped';\n    if ( this.readingEnabled ) {\n      if ( this.scannedText.length === 0 ) {\n        mainClass += ' scanning';\n      } else {\n        mainClass += ' reading';\n      }\n    }\n\n    return (\n      <Host>\n        <div class={mainClass }>\n          <div>{this.spanLoader()}</div>\n          {this.scanTitle && <label>{this.scanTitle}</label>}\n          <div class=\"scanned-text\">{this.scannedText}</div>\n          <input type=\"text\" value={this.scannedText} onChange={ev => this.handleOnInpujtChangeEvent(ev)} />\n        </div>\n      </Host>\n    );\n  }\n}\n"]}