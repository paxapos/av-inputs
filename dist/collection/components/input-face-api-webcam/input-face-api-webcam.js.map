{"version":3,"file":"input-face-api-webcam.js","sourceRoot":"","sources":["../../../src/components/input-face-api-webcam/input-face-api-webcam.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, Prop, Event,EventEmitter, Method, State } from '@stencil/core';\nimport { FaceapiService } from '../../utils/facepi.service';\nimport { createCanvas, createVideo, initWebcamToVideo } from '../../utils/camera.service';\nimport { FaceDetection } from 'face-api.js';\n\n@Component({\n  tag: 'input-face-api-webcam',\n  styleUrl: 'input-face-api-webcam.css',\n  shadow: true,\n})\nexport class InputFaceApiWebcam {\n\n    \n  @Element() el: HTMLElement;\n\n  @State() isDetecting = true;\n\n\n  @Prop({reflect: true, mutable: true}) photoPicMinValue?: number = 300\n\n  @Prop({reflect: true, mutable: true}) width?: number = 460\n  @Prop({reflect: true, mutable: true}) height?: number = 460\n\n  @Method()\n  async stopDetection(): Promise<void> {\n    this.isDetecting = false;\n  }\n\n  @Method()\n  async startDetection(): Promise<void> {\n    this.isDetecting = true;\n  }\n\n  video: HTMLVideoElement\n  canvas: HTMLCanvasElement\n  faceapiService: FaceapiService\n\n  @Event({\n    eventName: 'faceDetected',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) faceDetected: EventEmitter<Blob>;\n\n  @Event({\n    eventName: 'faceMinValueError',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) faceMinValueError: EventEmitter<FaceDetection>;\n\n\n  async componentWillLoad() {\n\n  }\n\n  async componentDidRender() {\n    this.video = createVideo(this.el)\n    this.canvas = createCanvas(this.el)\n\n\n    initWebcamToVideo(this.video)\n   \n      this.faceapiService = new FaceapiService(this.video, this.canvas)\n\n      this.webcamRender();\n    \n  }\n\n  async disconnectedCallback() {\n  }\n\n  /**\n   * \n   * @param result \n   * @returns true si proceso y detecto imagen\n   */\n  __processReturn(result): boolean {\n    let h = result.box.height * 1.5\n    let w = result.box.width * 1.5\n\n    // hacer caudrada la imagen\n    if ( h > w ) {\n        w = h\n    } else {\n        h = w\n    }\n\n    //centrar la imagen\n    const x = result.box.x - (w - result.box.width) / 2\n    const y = result.box.y - (h - result.box.height) / 2\n\n\n    if ( w > this.photoPicMinValue ) {\n\n      // zom video into canvas\n      this.canvas.getContext('2d').drawImage(this.video, x, y, w, h, 0, 0, this.canvas.width, this.canvas.height)\n\n      // this faceDetected emit blob from this.canvas\n      this.canvas.toBlob((blob) => {\n        this.faceDetected.emit(blob)\n      }, 'image/jpeg', 1)\n\n      return true;\n    }\n\n    return false;\n  }\n\n  drawCanvasNoFace() {\n    this.canvas.getContext('2d').drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  async webcamRender () {\n    \n    requestAnimationFrame(() => {\n      this.webcamRender() \n    });\n    \n    if ( this.isDetecting ) {\n      \n      const result = await this.faceapiService.detectFace()\n  \n      this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height)\n      \n      if (result ) {\n        if ( !this.__processReturn(result) ) {\n          this.faceMinValueError.emit(result)\n          this.drawCanvasNoFace();\n        }\n      } else {\n        this.drawCanvasNoFace()\n      }\n      \n    }\n};\n\n\n  render() {\n    return (\n      <Host style={{height: this.height+\"px\", width: this.width+\"px\"}}>\n\n        <slot name='before'></slot>\n        \n        <slot></slot>\n\n        <slot name='after'></slot>\n      </Host>\n    );\n  }\n\n}\n"]}