{"version":3,"file":"input-face-api-webcam.js","sourceRoot":"","sources":["../../../src/components/input-face-api-webcam/input-face-api-webcam.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Element, Prop, Event,EventEmitter, Method, State } from '@stencil/core';\nimport { FaceapiService } from '../../utils/facepi.service';\nimport { createCanvas, createVideo, initWebcamToVideo } from '../../utils/camera.service';\n\n@Component({\n  tag: 'input-face-api-webcam',\n  styleUrl: 'input-face-api-webcam.css',\n  shadow: true,\n})\nexport class InputFaceApiWebcam {\n  faceFound: Blob = null;\n\n  // canvas to store photo\n  photoCanvas: HTMLCanvasElement\n\n  //webcam stream\n  video: HTMLVideoElement\n\n  //canvas to draw webcam\n  canvas: HTMLCanvasElement\n\n  //faceapi service\n  faceapiService: FaceapiService\n\n    \n  @Element() el: HTMLElement;\n\n  @State() isDetecting = true;\n\n\n  @Prop({reflect: true, mutable: true}) photoPicMinValue?: number = 300\n  @Prop({reflect: true, mutable: true}) width?: number = 460\n  @Prop({reflect: true, mutable: true}) height?: number = 460\n\n  @Method()\n  async stopDetection(): Promise<void> {\n    this.isDetecting = false;\n  }\n\n  @Method()\n  async startDetection(): Promise<void> {\n    this.isDetecting = true;\n  }\n\n\n\n  @Event({\n    eventName: 'faceDetected',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) faceDetected: EventEmitter<Blob>;\n\n\n  @Event({\n    eventName: 'faceStopDetection',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) faceStopDetection: EventEmitter<void>;\n\n\n  async componentWillLoad() {\n    this.video = createVideo()\n    //this.el.appendChild(this.video)\n\n    this.canvas = createCanvas(this.el)\n    this.el.appendChild(this.canvas)\n\n\n    this.photoCanvas = createCanvas(this.el)\n\n  }\n\n  async componentDidRender() {\n\n    this.canvas.width = parseInt( this.el.getAttribute(\"width\") );\n    this.canvas.height = parseInt( this.el.getAttribute(\"height\") );\n\n    this.photoCanvas.width = parseInt( this.el.getAttribute(\"width\") );\n    this.photoCanvas.height = parseInt( this.el.getAttribute(\"height\") );\n\n    \n    initWebcamToVideo(this.video)\n   \n      this.faceapiService = new FaceapiService()\n\n      this.webcamRender();\n    \n  }\n\n  async disconnectedCallback() {\n  }\n\n  /**\n   * \n   * @param result \n   * @returns true si proceso y detecto imagen\n   */\n  getPicZoom(result): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n\n      let h = result.box.height *1.5\n      let w = result.box.width *1.5\n  \n      // hacer caudrada la imagen\n      if ( h > w ) {\n          w = h\n      } else {\n          h = w\n      }\n      \n      //centrar la imagen\n      const x = result.box.x - (w - result.box.width) / 2\n      const y = result.box.y - (h - result.box.height) / 2\n  \n      // eliminar la imagen del canvas\n      this.photoCanvas.getContext('2d').clearRect(0, 0, this.photoCanvas.width, this.photoCanvas.height)\n      \n      // zom video into canvas\n      this.photoCanvas.getContext('2d').drawImage(this.canvas, x, y, w, h, 0, 0, this.canvas.width, this.canvas.height)\n  \n  \n      try {\n        \n        // this faceDetected emit blob from this.canvas\n        this.photoCanvas.toBlob((blob) => {\n          this.faceDetected.emit(blob)\n          resolve(blob)\n        }, 'image/jpeg', 1)\n    \n      } catch (error) {\n        reject(error)\n      }\n\n      reject()\n    })\n\n  }\n\n  handleStopDetection() {\n    if ( this.faceFound ) {\n      this.faceStopDetection.emit()\n    }\n    this.faceFound = null\n  }\n \n  async webcamRender () {\n    \n    requestAnimationFrame(() => {\n      this.webcamRender() \n    });\n    \n    this.canvas.getContext('2d').drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height)\n\n    if ( this.isDetecting ) {\n      \n      const result = await this.faceapiService.detectFace( this.canvas )\n     \n      if (result ) {\n        try {\n          this.faceFound = await this.getPicZoom(result)\n        } catch (e) {\n          console.error(e)\n          this.handleStopDetection()\n        }\n      } else {\n        this.handleStopDetection()\n      }\n    }\n};\n\n\n  render() {\n    return (\n      <Host style={{height: this.height+\"px\", width: this.width+\"px\"}}>\n\n        <slot name='before'></slot>\n        \n        <slot></slot>\n\n        <slot name='after'></slot>\n      </Host>\n    );\n  }\n\n}\n"]}