{"version":3,"file":"input-file-from-webcam.js","sourceRoot":"","sources":["../../../src/components/input-file-from-webcam/input-file-from-webcam.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Method, Listen, Prop, Event, EventEmitter, Element, State, Watch } from '@stencil/core';\nimport { camera } from '../../utils/camera';\nimport { CameraDirection } from '../../utils/camera.service';\n\nexport interface WebcamError {\n  type: 'permission' | 'device' | 'stream' | 'unknown';\n  message: string;\n}\n\nexport interface CameraState {\n  status: 'loading' | 'ready' | 'error' | 'capturing' | 'inactive';\n  error?: WebcamError;\n}\n\n@Component({\n  tag: 'input-file-from-webcam',\n  styleUrl: 'input-file-from-webcam.css',\n  shadow: true,\n})\nexport class InputFileFromWebcam {\n\n  @Element() el: HTMLElement;\n\n  @State() cameraState: CameraState = { status: 'inactive' };\n  @State() isFlipped: boolean = false;\n\n  /**\n   * Width of the video element\n   */\n  @Prop({reflect: true, mutable: true}) width?: number = 460\n\n  /**\n   * height of the video element\n   */\n  @Prop({reflect: true, mutable: true}) height?: number = 460\n\n  /**\n   * FacingModel optiones following https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode#value\n   */\n  @Prop({ mutable: true, reflect: true }) facingMode?: CameraDirection = CameraDirection.Front\n\n  /**\n   * Show camera controls (flip, capture button, etc)\n   */\n  @Prop() showControls?: boolean = true\n\n  /**\n   * Auto-start camera when component loads\n   */\n  @Prop() autoStart?: boolean = true\n\n  /**\n   * Image quality for captured photos (0.1 to 1.0)\n   */\n  @Prop() imageQuality?: number = 0.85\n\n  /**\n   * Enable flash effect when taking picture\n   */\n  @Prop() flashEffect?: boolean = true\n\n  /**\n   * Capture button text\n   */\n  @Prop() captureButtonText?: string = '📸'\n\n  /**\n   * Flip camera button text\n   */\n  @Prop() flipButtonText?: string = '🔄'\n\n  /**\n   * you can pass a function and override the canvas.drawImage function so you\n   * can change the image adding filters or any kind of magin in your image\n   * \n   * you just need to crear a function with all canvas.-drawImage arguments\n   * \n   * here you have the list of vars you get: videoElement, left, top, imgSize, imgSize, 0,0, canvas.width, canvas.height\n   */\n  @Prop() drawImageCb?: Function = null\n\n  /**\n   * Start the camera\n   */\n  @Method()\n  async startCamera(): Promise<void> {\n    try {\n      this.cameraState = { status: 'loading' };\n      await camera.initCamera(this.el, this.facingMode, this.drawImageCb);\n      this.cameraState = { status: 'ready' };\n      this.cameraStarted.emit();\n    } catch (error) {\n      const webcamError: WebcamError = {\n        type: this.getErrorType(error),\n        message: error.message || 'Unknown camera error'\n      };\n      this.cameraState = { status: 'error', error: webcamError };\n      this.cameraError.emit(webcamError);\n      throw error;\n    }\n  }\n\n  /**\n   * Stop the camera\n   */\n  @Method()\n  async stopCamera(): Promise<void> {\n    camera.resetCamera();\n    this.cameraState = { status: 'inactive' };\n    this.cameraStopped.emit();\n  }\n\n  /**\n   * Take a picture\n   * @returns a blob with the image\n   */\n  @Method()\n  async takePic(): Promise<Blob> {\n    try {\n      this.cameraState = { ...this.cameraState, status: 'capturing' };\n      \n      if (this.flashEffect) {\n        this.showFlashEffect();\n      }\n      \n      const pic = await camera.takePicture(this.imageQuality);\n      this.cameraState = { ...this.cameraState, status: 'ready' };\n      this.pictureTaken.emit(pic);\n      return pic;\n    } catch (error) {\n      this.cameraState = { ...this.cameraState, status: 'ready' };\n      throw error;\n    }\n  }\n\n  /**\n   * Reset camera\n   */\n  @Method()\n  async resetCamera(): Promise<void> {\n    await this.stopCamera();\n    if (this.autoStart) {\n      await this.startCamera();\n    }\n  }\n\n  /**\n   * Toogle webcam, for example in mobile show front or back camera\n   */\n  @Method()\n  async toggleCamera(): Promise<void>{\n    await this.__toogleFacingMode();\n  }\n\n\n  /**\n   * Event emitted when the user takes a picture\n   */\n  @Event({\n    eventName: 'pictureTaken',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) pictureTaken: EventEmitter<Blob>;\n\n  /**\n   * Event emitted when facing mode changes\n   */\n  @Event({\n    eventName: 'facingModeChanged',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) facingModeChanged: EventEmitter<CameraDirection>;\n\n  /**\n   * Event emitted when camera starts successfully\n   */\n  @Event({\n    eventName: 'cameraStarted',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) cameraStarted: EventEmitter<void>;\n\n  /**\n   * Event emitted when camera stops\n   */\n  @Event({\n    eventName: 'cameraStopped',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) cameraStopped: EventEmitter<void>;\n\n  /**\n   * Event emitted when camera encounters an error\n   */\n  @Event({\n    eventName: 'cameraError',\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  }) cameraError: EventEmitter<WebcamError>;\n\n\n\n  @Listen('click')\n  onClickHandler() {\n    if (this.cameraState.status === 'ready') {\n      this.takePic();\n    }\n  }\n\n  @Watch('facingMode')\n  async onFacingModeChange() {\n    if (this.cameraState.status === 'ready') {\n      await this.resetCamera();\n    }\n  }\n\n  /**\n   * Get error type from error object\n   */\n  private getErrorType(error: any): WebcamError['type'] {\n    if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n      return 'permission';\n    }\n    if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n      return 'device';\n    }\n    if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n      return 'stream';\n    }\n    return 'unknown';\n  }\n\n  /**\n   * Show flash effect when taking picture\n   */\n  private showFlashEffect() {\n    const flashEl = this.el.shadowRoot?.querySelector('.flash-effect') as HTMLElement;\n    if (flashEl) {\n      flashEl.style.opacity = '1';\n      setTimeout(() => {\n        flashEl.style.opacity = '0';\n      }, 200);\n    }\n  }\n\n  /**\n   * Toggle webcam facing mode\n   */\n  private async __toogleFacingMode() {\n    const newFacingMode = (this.facingMode !== CameraDirection.Front) ? CameraDirection.Front : CameraDirection.Rear;\n    this.facingMode = newFacingMode;\n    this.facingModeChanged.emit(this.facingMode);\n  }\n\n  /**\n   * Handle capture button click\n   */\n  private async handleCaptureClick() {\n    if (this.cameraState.status === 'ready') {\n      await this.takePic();\n    }\n  }\n\n  /**\n   * Handle flip button click\n   */\n  private async handleFlipClick() {\n    await this.__toogleFacingMode();\n  }\n\n  /**\n   * Handle retry button click\n   */\n  private async handleRetryClick() {\n    await this.startCamera();\n  }\n\n \n\n  componentWillLoad() {\n    this.isFlipped = this.facingMode === CameraDirection.Front;\n  }\n  \n  async componentDidLoad() {\n    if (this.autoStart) {\n      await this.startCamera();\n    }\n  }\n\n  async disconnectedCallback() {\n    await this.stopCamera();\n  }\n\n  /**\n   * Render loading state\n   */\n  private renderLoadingState() {\n    return (\n      <div class=\"camera-state loading\">\n        <div class=\"spinner\"></div>\n        <p>Iniciando cámara...</p>\n      </div>\n    );\n  }\n\n  /**\n   * Render error state\n   */\n  private renderErrorState() {\n    const { error } = this.cameraState;\n    let errorMessage = 'Error desconocido';\n    let actionButton = null;\n\n    switch (error?.type) {\n      case 'permission':\n        errorMessage = 'Permiso de cámara denegado. Por favor, permite el acceso a la cámara.';\n        break;\n      case 'device':\n        errorMessage = 'No se encontró ninguna cámara disponible.';\n        break;\n      case 'stream':\n        errorMessage = 'Error al acceder a la cámara. Puede estar siendo usada por otra aplicación.';\n        actionButton = (\n          <button class=\"retry-button\" onClick={() => this.handleRetryClick()}>\n            Reintentar\n          </button>\n        );\n        break;\n      default:\n        errorMessage = error?.message || 'Error desconocido al inicializar la cámara.';\n        actionButton = (\n          <button class=\"retry-button\" onClick={() => this.handleRetryClick()}>\n            Reintentar\n          </button>\n        );\n    }\n\n    return (\n      <div class=\"camera-state error\">\n        <div class=\"error-icon\">⚠️</div>\n        <p class=\"error-message\">{errorMessage}</p>\n        {actionButton}\n      </div>\n    );\n  }\n\n  /**\n   * Render inactive state\n   */\n  private renderInactiveState() {\n    return (\n      <div class=\"camera-state inactive\">\n        <div class=\"inactive-icon\">📹</div>\n        <p>Cámara inactiva</p>\n        <button class=\"start-button\" onClick={() => this.startCamera()}>\n          Iniciar Cámara\n        </button>\n      </div>\n    );\n  }\n\n  /**\n   * Render camera controls\n   */\n  private renderControls() {\n    if (!this.showControls || (this.cameraState.status !== 'ready' && this.cameraState.status !== 'capturing')) {\n      return null;\n    }\n\n    const isCapturing = this.cameraState.status === 'capturing';\n\n    return (\n      <div class=\"camera-controls\">\n        <button \n          class=\"control-button flip-button\" \n          onClick={() => this.handleFlipClick()}\n          title=\"Cambiar cámara\"\n          disabled={isCapturing}\n        >\n          {this.flipButtonText}\n        </button>\n        <button \n          class=\"control-button capture-button\" \n          onClick={() => this.handleCaptureClick()}\n          title=\"Tomar foto\"\n          disabled={isCapturing}\n        >\n          {isCapturing ? '⏳' : this.captureButtonText}\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const hostClasses = {\n      'camera-ready': this.cameraState.status === 'ready',\n      'camera-loading': this.cameraState.status === 'loading',\n      'camera-error': this.cameraState.status === 'error',\n      'camera-inactive': this.cameraState.status === 'inactive',\n      'camera-capturing': this.cameraState.status === 'capturing',\n      'flipped': this.isFlipped && this.facingMode === CameraDirection.Front\n    };\n\n    return (\n      <Host \n        style={{height: this.height+\"px\", width: this.width+\"px\"}}\n        class={hostClasses}\n      >\n        <slot name='before'></slot>\n        \n        {this.cameraState.status === 'loading' && this.renderLoadingState()}\n        {this.cameraState.status === 'error' && this.renderErrorState()}\n        {this.cameraState.status === 'inactive' && this.renderInactiveState()}\n        \n        <slot></slot>\n        \n        {this.flashEffect && <div class=\"flash-effect\"></div>}\n        {this.renderControls()}\n        \n        <slot name='after'></slot>\n      </Host>\n    );\n  }\n\n}\n"]}