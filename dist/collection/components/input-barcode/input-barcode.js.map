{"version":3,"file":"input-barcode.js","sourceRoot":"","sources":["../../../src/components/input-barcode/input-barcode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Host,Event, Prop, h, Method, Build } from '@stencil/core';\nimport {Html5Qrcode, Html5QrcodeCameraScanConfig, Html5QrcodeFullConfig, Html5QrcodeScannerState, Html5QrcodeSupportedFormats} from \"html5-qrcode\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\n@Component({\n  tag: 'input-barcode',\n  styleUrl: 'input-barcode.css',\n  shadow: false\n})\nexport class InputBarcode {\n\n   /**\n   * id of camera\n   */\n  @Prop() cameraId: string\n   /**\n   * Width of the camera\n   */\n  @Prop() width: string = '400px'\n   /**\n   * Height of the camera\n   */\n  @Prop() height: string = '200px'\n   /**\n   * All formats of camera\n   */\n  @Prop() supportedFormats: Html5QrcodeSupportedFormats[] = [\n    Html5QrcodeSupportedFormats.QR_CODE,\n    Html5QrcodeSupportedFormats.AZTEC,\n    Html5QrcodeSupportedFormats.CODABAR,\n    Html5QrcodeSupportedFormats.CODE_39,\n    Html5QrcodeSupportedFormats.CODE_93,\n    Html5QrcodeSupportedFormats.CODE_128,\n    Html5QrcodeSupportedFormats.DATA_MATRIX,\n    Html5QrcodeSupportedFormats.MAXICODE,\n    Html5QrcodeSupportedFormats.ITF,\n    Html5QrcodeSupportedFormats.EAN_13,\n    Html5QrcodeSupportedFormats.EAN_8,\n    Html5QrcodeSupportedFormats.PDF_417,\n    Html5QrcodeSupportedFormats.RSS_14,\n    Html5QrcodeSupportedFormats.RSS_EXPANDED,\n    Html5QrcodeSupportedFormats.UPC_A,\n    Html5QrcodeSupportedFormats.UPC_E,\n    Html5QrcodeSupportedFormats.UPC_EAN_EXTENSION\n  ]\n   /**\n   * Camera user or enviroment\n   */\n  @Prop() facingMode: 'user'|'enviroment' = 'enviroment'\n  /**\n   * Cualquiera de estas configuraciones\n   * https://scanapp.org/html5-qrcode-docs/docs/apis/interfaces/Html5QrcodeCameraScanConfig\n   */\n  @Prop() cameraConfig: Html5QrcodeCameraScanConfig = {\n    fps: 10,\n    \n  }\n\n   /**\n   * Uuid of the div\n   */\n  private uuidGeneric: string = uuidv4()\n\n   /**\n   * Element Html5Qrcode\n   */\n  private html5QrCode: Html5Qrcode\n\n  @Event() scan: EventEmitter<string>;\n\n\n  @Method()\n  async getState(): Promise<Html5QrcodeScannerState> {\n    return this.html5QrCode.getState()\n  }\n\n\n  @Method()\n  async stop() {\n    return await this.html5QrCode.stop()\n  }\n\n\n  @Method()\n  async start() {\n    return await this.html5QrCode.start(\n      {facingMode: this.facingMode},\n      this.cameraConfig,\n      (decodedText) => {\n        this.scan.emit(decodedText)\n      },\n      (errorMessage) => {\n        throw new Error(`Error al escanear: ${errorMessage}`);\n      })\n    .catch((err) => {\n      throw new Error(`Error al iniciar scanner: ${err}`);\n    });\n  }\n\n\n  @Method()\n  async getCameras() {\n     // This method will trigger user permissions\n     Html5Qrcode.getCameras().then(devices => {\n      console.info('paso por aca')\n      /**\n       * devices would be an array of objects of type:\n       * { id: \"id\", label: \"label\" }\n       */\n      console.info('devices',devices)\n      if (devices && devices.length) {\n        let cameraId = devices[0].id;\n        return cameraId\n        // .. use this to start scanning.\n      }\n    }).catch(err => {\n      console.error(err)\n      // handle err\n    });\n  }\n\n  componentDidLoad(){\n    console.info('entrooo',this.supportedFormats)\n    const config: Html5QrcodeFullConfig = {\n      verbose: Build.isDev,\n      formatsToSupport: this.supportedFormats,\n    };\n    this.html5QrCode = new Html5Qrcode(this.uuidGeneric, config);\n\n    this.start()   \n  }\n\n\n  render() {\n    console.info('entrooo 2')\n    const hostStyle = {\n      'width' : this.width,\n      'height' : this.height,\n      'overflow': 'hidden',\n      'display': 'inline-block'\n    }\n    return (\n      <Host style={hostStyle}>\n        <div id={this.uuidGeneric}></div>\n      </Host>\n    );\n  }\n\n}\n"]}