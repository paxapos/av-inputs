{"version":3,"file":"input-barcode.js","sourceRoot":"","sources":["../../../src/components/input-barcode/input-barcode.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Host,Event, Prop, h, Method } from '@stencil/core';\nimport {Html5Qrcode, Html5QrcodeCameraScanConfig, Html5QrcodeFullConfig, Html5QrcodeScannerState, Html5QrcodeSupportedFormats} from \"html5-qrcode\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { InputScanData } from '../input-scan-reader/input-scan-reader.types';\nimport { processText } from 'src/utils/text.handler';\n\n\n@Component({\n  tag: 'input-barcode',\n  styleUrl: 'input-barcode.css',\n  shadow: false\n})\nexport class InputBarcode {\n\n   /**\n   * id of camera\n   */\n  @Prop() cameraId: string\n   /**\n   * Width of the camera\n   */\n  @Prop() width: string = '400px'\n   /**\n   * Height of the camera\n   */\n  @Prop() height: string = '200px'\n   /**\n   * All formats of camera\n   */\n  @Prop() supportedFormats: Html5QrcodeSupportedFormats[] = [\n    Html5QrcodeSupportedFormats.QR_CODE,\n    Html5QrcodeSupportedFormats.AZTEC,\n    Html5QrcodeSupportedFormats.CODABAR,\n    Html5QrcodeSupportedFormats.CODE_39,\n    Html5QrcodeSupportedFormats.CODE_93,\n    Html5QrcodeSupportedFormats.CODE_128,\n    Html5QrcodeSupportedFormats.DATA_MATRIX,\n    Html5QrcodeSupportedFormats.MAXICODE,\n    Html5QrcodeSupportedFormats.ITF,\n    Html5QrcodeSupportedFormats.EAN_13,\n    Html5QrcodeSupportedFormats.EAN_8,\n    Html5QrcodeSupportedFormats.PDF_417,\n    Html5QrcodeSupportedFormats.RSS_14,\n    Html5QrcodeSupportedFormats.RSS_EXPANDED,\n    Html5QrcodeSupportedFormats.UPC_A,\n    Html5QrcodeSupportedFormats.UPC_E,\n    Html5QrcodeSupportedFormats.UPC_EAN_EXTENSION\n  ]\n   /**\n   * Camera user or enviroment\n   */\n  @Prop() facingMode: 'user'|'enviroment' = 'enviroment'\n  /**\n   * Cualquiera de estas configuraciones\n   * https://scanapp.org/html5-qrcode-docs/docs/apis/interfaces/Html5QrcodeCameraScanConfig\n   */\n  @Prop() cameraConfig: Html5QrcodeCameraScanConfig = {\n    fps: 10,\n    \n  }\n\n   /**\n   * Uuid of the div\n   */\n  private uuidGeneric: string = uuidv4()\n\n   /**\n   * Element Html5Qrcode\n   */\n  private html5QrCode: Html5Qrcode\n\n  /**\n   * Event Scan\n   */\n  @Event() scan: EventEmitter<InputScanData>;\n\n  /**\n   * get state\n   */\n  @Method()\n  async getState(): Promise<Html5QrcodeScannerState> {\n    return this.html5QrCode.getState()\n  }\n\n\n  @Method()\n  async stop() {\n    return await this.html5QrCode.stop()\n  }\n\n\n\n  private lastScan:InputScanData = null\n  private scanTimer: NodeJS.Timeout = null;\n  /**\n   * Para asegurarse de que no lea inmediatamente el mismo DNI escaneado\n   * @param decodedText \n   */\n  handleDecodedText(decodedText: InputScanData){\n    console.info(\"INICIANDOOOOO\")\n    console.info(this.lastScan)\n    console.info(decodedText.text)\n    if ( this.lastScan?.text.toString() != decodedText.text.toString() || this.lastScan === null ) {\n      console.info(\"LEYOOOOO\", decodedText)\n      var today = new Date();\n      var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      console.info('time',time)\n      this.scan.emit(decodedText);\n      this.lastScan = decodedText;\n      clearTimeout(this.scanTimer);\n      this.scanTimer = setTimeout(() => {\n        this.lastScan = null;\n      }, 5000);\n    }\n  }\n\n\n  @Method()\n  async start() {\n    return await this.html5QrCode.start(\n      {facingMode: this.facingMode},\n      this.cameraConfig,\n      (decodedText) => {\n        console.info(\"leyo data\",decodedText);\n        const scannedData = processText(decodedText);\n        console.info(\"leyo scannedData\",scannedData);\n        this.handleDecodedText(scannedData)\n      },\n      () => {\n        //console.error(error)\n      })\n    .catch((err) => {\n      throw new Error(`Error al iniciar scanner: ${err}`);\n    });\n  }\n\n\n  /**\n   * get Cameras of user\n   */\n  @Method()\n  async getCameras() {\n     // This method will trigger user permissions\n     Html5Qrcode.getCameras().then(devices => {\n      /**\n       * devices would be an array of objects of type:\n       * { id: \"id\", label: \"label\" }\n       */\n      console.info('devices',devices)\n      if (devices && devices.length) {\n        let cameraId = devices[0].id;\n        return cameraId\n        // .. use this to start scanning.\n      }\n    }).catch(err => {\n      err\n      // handle err\n    });\n  }\n\n  componentDidLoad(){\n    const config: Html5QrcodeFullConfig = {\n      verbose: false,\n      formatsToSupport: this.supportedFormats,\n    };\n    this.html5QrCode = new Html5Qrcode(this.uuidGeneric, config);\n\n    this.start()   \n  }\n\n\n  render() {\n    const hostStyle = {\n      'width' : this.width,\n      'height' : this.height,\n      'overflow': 'hidden',\n      'display': 'inline-block'\n    }\n    return (\n      <Host style={hostStyle}>\n        <div id={this.uuidGeneric}></div>\n      </Host>\n    );\n  }\n\n}\n"]}