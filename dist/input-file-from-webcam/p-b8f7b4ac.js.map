{"version":3,"names":["CameraDirection","createVideo","parentElement","videos","getElementsByTagName","length","video","document","createElement","autoplay","style","display","appendChild","createCanvas","canvasss","canvas","width","parseInt","getAttribute","height","initWebcamToVideo","direction","Front","navigator","mediaDevices","getUserMedia","console","info","facingMode","audio","min","then","stream","srcObject","catch","err0r","log"],"sources":["./src/utils/camera.service.ts"],"sourcesContent":["export enum CameraDirection {\n    Rear = \"REAR\",\n    Front = \"FRONT\"\n}\n\n/**\n * Crea un HTMLVideoElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement \n */\nexport  function createVideo( parentElement: HTMLElement ): HTMLVideoElement {\n        \n    // agarro los que tienen tag video\n    const videos = parentElement.getElementsByTagName(\"video\");\n    if ( videos.length > 0 ) {\n        // si existen devuelvo del 1ero (deberia haber solo 1)\n        return videos[0]\n    }\n    \n    // no existe, lo creo\n    const video = document.createElement(\"video\")\n    video.autoplay = true;\n    video.style.display = \"none\"\n    parentElement.appendChild( video )\n\n    return video\n}\n\n\n/**\n * Crea un HTMLCanvasElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement \n */\nexport  function createCanvas( parentElement: HTMLElement ): HTMLCanvasElement {\n    \n    // agarro los que tienen tag canvas\n    const canvasss = parentElement.getElementsByTagName(\"canvas\");\n    if ( canvasss.length ) {\n        // si existen devuelvo del 1ero (deberia haber solo 1)\n        return  canvasss[0]\n        \n    }\n    \n    // no existe, lo creo\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = parseInt( parentElement.getAttribute(\"width\") );\n    canvas.height = parseInt( parentElement.getAttribute(\"height\") );\n    parentElement.appendChild( canvas )\n    \n    return canvas\n\n}\n\n\nexport function initWebcamToVideo(video, direction: CameraDirection = CameraDirection.Front) {\n        \n    if (navigator.mediaDevices.getUserMedia) {\n        console.info(\"la camara\")\n        const facingMode = (direction == CameraDirection.Front) ? \"user\": \"environment\"\n\n        navigator.mediaDevices.getUserMedia({\n            audio: false,\n            video: {\n                width: { min: 200 },\n                height: { min: 200 },\n                facingMode: facingMode\n            }\n        })\n        .then((stream) => {\n            video.srcObject = stream;\n        })\n        .catch(function (err0r) {\n            console.log(\"Something went wrong!\", err0r);\n        });\n    }\n}"],"mappings":"IAAYA,GAAZ,SAAYA,GACRA,EAAA,eACAA,EAAA,gBACH,EAHD,CAAYA,MAAe,K,SASVC,EAAaC,GAG1B,MAAMC,EAASD,EAAcE,qBAAqB,SAClD,GAAKD,EAAOE,OAAS,EAAI,CAErB,OAAOF,EAAO,E,CAIlB,MAAMG,EAAQC,SAASC,cAAc,SACrCF,EAAMG,SAAW,KACjBH,EAAMI,MAAMC,QAAU,OACtBT,EAAcU,YAAaN,GAE3B,OAAOA,CACX,C,SAOiBO,EAAcX,GAG3B,MAAMY,EAAWZ,EAAcE,qBAAqB,UACpD,GAAKU,EAAST,OAAS,CAEnB,OAAQS,EAAS,E,CAKrB,MAAMC,EAASR,SAASC,cAAc,UACtCO,EAAOC,MAAQC,SAAUf,EAAcgB,aAAa,UACpDH,EAAOI,OAASF,SAAUf,EAAcgB,aAAa,WACrDhB,EAAcU,YAAaG,GAE3B,OAAOA,CAEX,C,SAGgBK,EAAkBd,EAAOe,EAA6BrB,EAAgBsB,OAElF,GAAIC,UAAUC,aAAaC,aAAc,CACrCC,QAAQC,KAAK,aACb,MAAMC,EAAcP,GAAarB,EAAgBsB,MAAS,OAAQ,cAElEC,UAAUC,aAAaC,aAAa,CAChCI,MAAO,MACPvB,MAAO,CACHU,MAAO,CAAEc,IAAK,KACdX,OAAQ,CAAEW,IAAK,KACfF,WAAYA,KAGnBG,MAAMC,IACH1B,EAAM2B,UAAYD,CAAM,IAE3BE,OAAM,SAAUC,GACbT,QAAQU,IAAI,wBAAyBD,E,IAGjD,Q"}