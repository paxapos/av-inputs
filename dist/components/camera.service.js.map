{"file":"camera.service.js","mappings":"IAAY;AAAZ,WAAY,eAAe;EACvB,gCAAa,CAAA;EACb,kCAAe,CAAA;AACnB,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED;;;;SAIiB,WAAW;;EAGxB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;EAC7C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;EACtB,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;EAE5B,OAAO,KAAK,CAAA;AAChB,CAAC;AAGD;;;;SAIiB,YAAY,CAAE,aAA0B;;EAGrD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;EAC/C,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAE,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAE,CAAC;EAC/D,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAE,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAE,CAAC;EACjE,OAAO,MAAM,CAAA;AAEjB,CAAC;SAGe,iBAAiB,CAAC,KAAK,EAAE,YAA6B,eAAe,CAAC,KAAK;EAEvF,IAAI,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE;IACrC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IACzB,MAAM,UAAU,GAAG,CAAC,SAAS,IAAI,eAAe,CAAC,KAAK,IAAI,MAAM,GAAE,aAAa,CAAA;IAE/E,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;MAChC,KAAK,EAAE,KAAK;MACZ,KAAK,EAAE;QACH,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;QACnB,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;QACpB,UAAU,EAAE,UAAU;OACzB;KACJ,CAAC;OACD,IAAI,CAAC,CAAC,MAAM;MACT,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;KAC5B,CAAC;OACD,KAAK,CAAC,UAAU,KAAK;MAClB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;KAC/C,CAAC,CAAC;GACN;AACL;;;;","names":[],"sources":["./src/utils/camera.service.ts"],"sourcesContent":["export enum CameraDirection {\n    Rear = \"REAR\",\n    Front = \"FRONT\"\n}\n\n/**\n * Crea un HTMLVideoElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement \n */\nexport  function createVideo(): HTMLVideoElement {\n        \n    // no existe, lo creo\n    const video = document.createElement(\"video\")\n    video.autoplay = true;\n    video.style.display = \"none\"\n\n    return video\n}\n\n\n/**\n * Crea un HTMLCanvasElement en el parentElement dado, siempre y cuando no exista\n * @param parentElement \n */\nexport  function createCanvas( parentElement: HTMLElement ): HTMLCanvasElement {\n        \n    // no existe, lo creo\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = parseInt( parentElement.getAttribute(\"width\") );\n    canvas.height = parseInt( parentElement.getAttribute(\"height\") );\n    return canvas\n\n}\n\n\nexport function initWebcamToVideo(video, direction: CameraDirection = CameraDirection.Front) {\n        \n    if (navigator.mediaDevices.getUserMedia) {\n        console.info(\"la camara\")\n        const facingMode = (direction == CameraDirection.Front) ? \"user\": \"environment\"\n\n        navigator.mediaDevices.getUserMedia({\n            audio: false,\n            video: {\n                width: { min: 200 },\n                height: { min: 200 },\n                facingMode: facingMode\n            }\n        })\n        .then((stream) => {\n            video.srcObject = stream;\n        })\n        .catch(function (err0r) {\n            console.log(\"Something went wrong!\", err0r);\n        });\n    }\n}"],"version":3}